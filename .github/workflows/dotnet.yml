name: Performance Benchmark

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache .NET
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          path: |
            ~/.dotnet
            ~/.nuget

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0

      - name: Cache hyperfine
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-hyperfine-${{ hashFiles('**/*.csproj') }}
          path: ~/.cargo/bin

      - name: Setup hyperfine
        run: |
          if [ ! -f ~/.cargo/bin/hyperfine ]; then
            cargo install hyperfine
          fi

      - name: Get changed projects
        id: detect-changes
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} HEAD)
          CHANGED_PROJECTS=$(echo "$CHANGED_FILES" | grep -E '^20[0-9]{2}/[0-9]+/' | cut -d'/' -f1,2 | uniq)
          echo "changed_projects=$CHANGED_PROJECTS" >> $GITHUB_OUTPUT

      - name: Build changed projects
        if: steps.detect-changes.outputs.changed_projects != ''
        run: |
          for PROJECT in ${{ steps.detect-changes.outputs.changed_projects }}; do
            dotnet restore "$PROJECT"
            dotnet publish "$PROJECT" -c Release -r linux-x64 --self-contained true
          done

      - name: Run benchmark using hyperfine on changed projects
        if: steps.detect-changes.outputs.changed_projects != ''
        run: |
          for PROJECT in ${{ steps.detect-changes.outputs.changed_projects }}; do
            EXE_PATH=$(find "$PROJECT/bin/Release/net9.0/linux-x64/publish/" -type f -executable | head -n 1)
            if [ -z "$EXE_PATH" ]; then
              echo "No executable found for project: $PROJECT"
              continue
            fi
            
            output=$(hyperfine --warmup 10 "$EXE_PATH")
            echo "$output" > "$PROJECT/hyperfine_output.txt"
          done

      - name: Send benchmark results to Discord
        if: steps.detect-changes.outputs.changed_projects != ''
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          for PROJECT in ${{ steps.detect-changes.outputs.changed_projects }}; do
            if [ -f "$PROJECT/hyperfine_output.txt" ]; then
              output=$(cat "$PROJECT/hyperfine_output.txt")
              escaped_output=$(echo "$output" | sed ':a;N;$!ba;s/\n/\\n/g')
              message="{\"content\": \"Benchmark results for **$PROJECT**:\n\`\`\`\n$escaped_output\n\`\`\`\"}"
              
              # Send the result to Discord
              curl -H "Content-Type: application/json" \
                   -X POST \
                   -d "$message" \
                   "${{ secrets.DISCORD_WEBHOOK_URL }}"
            fi
          done
